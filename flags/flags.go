package flags

// Flag represents a command and its flags
type Flag struct {
    Name        string
    Description string
}

var Words = []Flag{
    {"sudo", "Flags: -u (user), -s (shell), -b (background)"},
    {"cat", "Flags: -n (number lines), -b (number non-blank lines), -s (squeeze blank)"},
    {"ls", "Flags: -l (long listing), -a (all files), -h (human-readable)"},
    {"cd", "Flags: No flags available"},
    {"pwd", "Flags: -L (logical), -P (physical)"},
    {"touch", "Flags: -a (change access time), -m (change modification time), -c (do not create)"},
    {"mkdir", "Flags: -p (parents), -v (verbose), -m (mode)"},
    {"rm", "Flags: -r (recursive), -f (force), -v (verbose)"},
    {"cp", "Flags: -r (recursive), -i (interactive), -v (verbose)"},
    {"mv", "Flags: -i (interactive), -f (force), -v (verbose)"},
    {"clear", "Flags: No flags available"},
    {"exit", "Flags: No flags available"},
    {"echo", "Flags: -n (no newline), -e (enable interpretation of backslash escapes)"},
    {"man", "Flags: -k (keyword search), -f (whatis), -a (all)"},
    {"grep", "Flags: -i (ignore case), -r (recursive), -v (invert match)"},
    {"find", "Flags: -name (name pattern), -type (file type), -exec (execute command)"},
    {"chmod", "Flags: -R (recursive), -v (verbose), -c (changes)"},
    {"chown", "Flags: -R (recursive), -v (verbose), -c (changes)"},
    {"df", "Flags: -h (human-readable), -T (print file system type), -i (inodes)"},
    {"du", "Flags: -h (human-readable), -s (summarize), -a (all files)"},
    {"head", "Flags: -n (number of lines), -c (number of bytes), -q (quiet)"},
    {"tail", "Flags: -n (number of lines), -f (follow), -c (number of bytes)"},
    {"tar", "Flags: -c (create), -x (extract), -v (verbose)"},
    {"wget", "Flags: -O (output file), -q (quiet), -r (recursive)"},
    {"curl", "Flags: -o (output file), -I (head), -L (location)"},
    {"ps", "Flags: -e (all processes), -f (full format), -u (user)"},
    {"kill", "Flags: -s (signal), -l (list signals), -p (process)"},
    {"top", "Flags: -b (batch mode), -n (number of iterations), -u (user)"},
    {"htop", "Flags: -d (delay), -u (user), -p (pid)"},
    {"ssh", "Flags: -l (login name), -p (port), -i (identity file)"},
    {"scp", "Flags: -r (recursive), -P (port), -i (identity file)"},
    {"nano", "Flags: -B (backup), -m (mouse support), -i (auto-indent)"},
    {"vim", "Flags: -u (vimrc file), -N (no compatible), -e (ex mode)"},
    {"apt-get", "Flags: -y (assume yes), -q (quiet), -d (download only)"},
    {"yum", "Flags: -y (assume yes), -q (quiet), -v (verbose)"},
    {"ping", "Flags: -c (count), -i (interval), -t (ttl)"},
    {"ifconfig", "Flags: -a (all interfaces), -s (short display), -v (verbose)"},
    {"ip", "Flags: -s (statistics), -d (details), -r (resolve)"},
    {"netstat", "Flags: -a (all), -t (tcp), -u (udp)"},
    {"ss", "Flags: -t (tcp), -u (udp), -a (all)"},
    {"mount", "Flags: -t (type), -o (options), -v (verbose)"},
    {"umount", "Flags: -f (force), -l (lazy), -v (verbose)"},
    {"uname", "Flags: -a (all), -r (kernel release), -v (kernel version)"},
    {"uptime", "Flags: No flags available"},
    {"whoami", "Flags: No flags available"},
    {"hostname", "Flags: -i (ip address), -f (fqdn), -d (domain)"},
    {"history", "Flags: -c (clear), -d (delete), -a (append)"},
    {"alias", "Flags: No flags available"},
    {"unalias", "Flags: -a (all)"},
    {"env", "Flags: No flags available"},
    {"export", "Flags: No flags available"},
    {"source", "Flags: No flags available"},
    {"su", "Flags: -c (command), -l (login), -s (shell)"},
    {"passwd", "Flags: -d (delete), -e (expire), -l (lock)"},
    {"useradd", "Flags: -m (create home), -s (shell), -G (groups)"},
    {"usermod", "Flags: -l (login), -G (groups), -s (shell)"},
    {"userdel", "Flags: -r (remove home), -f (force)"},
    {"groupadd", "Flags: -g (gid), -r (system group)"},
    {"groupmod", "Flags: -n (new name), -g (gid)"},
    {"groupdel", "Flags: No flags available"},
    {"crontab", "Flags: -e (edit), -l (list), -r (remove)"},
    {"at", "Flags: -f (file), -m (mail), -v (verbose)"},
    {"jobs", "Flags: -l (long), -p (process group id), -n (notify)"},
    {"bg", "Flags: No flags available"},
    {"fg", "Flags: No flags available"},
    {"killall", "Flags: -i (interactive), -v (verbose), -w (wait)"},
    {"xargs", "Flags: -n (max args), -P (max procs), -I (replace string)"},
    {"tee", "Flags: -a (append), -i (ignore interrupts)"},
    {"diff", "Flags: -u (unified), -c (context), -i (ignore case)"},
    {"patch", "Flags: -p (strip), -R (reverse), -N (ignore already applied)"},
    {"sed", "Flags: -n (quiet), -e (expression), -i (in-place)"},
    {"awk", "Flags: -F (field separator), -v (variable), -f (file)"},
    {"tr", "Flags: -d (delete), -s (squeeze), -c (complement)"},
    {"cut", "Flags: -f (fields), -d (delimiter), -c (characters)"},
    {"sort", "Flags: -r (reverse), -n (numeric), -k (key)"},
    {"uniq", "Flags: -c (count), -d (repeated), -u (unique)"},
    {"wc", "Flags: -l (lines), -w (words), -c (bytes)"},
    {"basename", "Flags: -s (suffix)"},
    {"dirname", "Flags: No flags available"},
    {"readlink", "Flags: -f (canonicalize), -e (exist), -m (multiple)"},
    {"ln", "Flags: -s (symbolic), -f (force), -v (verbose)"},
    {"stat", "Flags: -f (file system), -t (terse), -c (format)"},
    {"file", "Flags: -b (brief), -i (mime), -z (decompress)"},
    {"strings", "Flags: -a (all), -n (number), -t (radix)"},
    {"md5sum", "Flags: -c (check), -b (binary), -t (text)"},
    {"sha256sum", "Flags: -c (check), -b (binary), -t (text)"},
    {"gzip", "Flags: -d (decompress), -k (keep), -r (recursive)"},
    {"gunzip", "Flags: -k (keep), -r (recursive)"},
    {"bzip2", "Flags: -d (decompress), -k (keep), -v (verbose)"},
    {"bunzip2", "Flags: -k (keep), -v (verbose)"},
    {"zip", "Flags: -r (recursive), -q (quiet), -v (verbose)"},
    {"unzip", "Flags: -l (list), -t (test), -d (directory)"},
    {"rar", "Flags: -a (add), -x (extract), -v (volume)"},
    {"unrar", "Flags: -x (extract), -l (list), -v (verbose)"},
    {"7z", "Flags: -a (add), -x (extract), -t (type)"},
    {"7za", "Flags: -a (add), -x (extract), -t (type)"},
    {"7zr", "Flags: -a (add), -x (extract), -t (type)"},
    {"free", "Flags: -h (human-readable), -m (megabytes), -g (gigabytes)"},
    {"who", "Flags: -a (all), -b (boot), -q (count)"},
    {"last", "Flags: -n (number), -R (no hostname), -x (system)"},
    {"dmesg", "Flags: -C (clear), -c (read and clear), -T (human-readable)"},
    {"lsblk", "Flags: -f (file system), -o (output), -d (dependencies)"},
    {"blkid", "Flags: -p (probe), -s (show), -o (output)"},
    {"fdisk", "Flags: -l (list), -u (units), -c (compatibility)"},
    {"mkfs", "Flags: -t (type), -c (check), -v (verbose)"},
    {"fsck", "Flags: -a (auto), -r (interactive), -y (yes)"},
    {"parted", "Flags: -l (list), -s (script), -a (align)"},
    {"dd", "Flags: if (input file), of (output file), bs (block size)"},
    {"sync", "Flags: No flags available"},
    {"shutdown", "Flags: -h (halt), -r (reboot), -c (cancel)"},
    {"reboot", "Flags: No flags available"},
    {"systemctl", "Flags: -t (type), -a (all), -l (full)"},
    {"journalctl", "Flags: -f (follow), -u (unit), -p (priority)"},
    {"timedatectl", "Flags: -s (set), -p (print), -l (list)"},
    {"hostnamectl", "Flags: -s (set), -p (print), -l (list)"},
    {"localectl", "Flags: -s (set), -p (print), -l (list)"},
    {"loginctl", "Flags: -s (set), -p (print), -l (list)"},
    {"nmcli", "Flags: -t (terse), -p (pretty), -m (mode)"},
    {"iwconfig", "Flags: -a (all), -d (debug), -s (status)"},
    {"iwlist", "Flags: -a (all), -d (debug), -s (status)"},
    {"traceroute", "Flags: -m (max hops), -q (queries), -w (wait)"},
    {"mtr", "Flags: -r (report), -c (count), -i (interval)"},
    {"dig", "Flags: -t (type), -x (reverse), -p (port)"},
    {"nslookup", "Flags: -type (type), -timeout (timeout), -port (port)"},
    {"host", "Flags: -t (type), -v (verbose), -a (all)"},
    {"rsync", "Flags: -a (archive), -v (verbose), -z (compress)"},
    {"ftp", "Flags: -v (verbose), -n (no auto-login), -i (interactive)"},
    {"sftp", "Flags: -b (batch), -C (compress), -o (option)"},
    {"telnet", "Flags: -a (automatic login), -e (escape), -l (user)"},
    {"nc", "Flags: -l (listen), -u (udp), -v (verbose)"},
    {"nmap", "Flags: -sS (TCP SYN scan), -O (OS detection), -v (verbose)"},
    {"tcpdump", "Flags: -i (interface), -n (numeric), -v (verbose)"},
    {"wireshark", "Flags: -i (interface), -k (start capture), -f (filter)"},
    {"iptables", "Flags: -A (append), -D (delete), -L (list)"},
    {"firewalld", "Flags: -q (quiet), -v (verbose), -h (help)"},
    {"ufw", "Flags: -a (allow), -d (deny), -r (reject)"},
    {"fail2ban", "Flags: -d (debug), -q (quiet), -v (verbose)"},
    {"logrotate", "Flags: -d (debug), -f (force), -v (verbose)"},
    {"cron", "Flags: No flags available"},
    {"anacron", "Flags: -d (debug), -s (safe), -u (update)"},
    {"systemd-analyze", "Flags: -p (property), -t (type), -f (filter)"},
    {"pkill", "Flags: -u (user), -t (terminal), -x (exact)"},
    {"pgrep", "Flags: -u (user), -t (terminal), -x (exact)"},
    {"nice", "Flags: -n (adjustment)"},
    {"renice", "Flags: -n (adjustment), -p (pid), -u (user)"},
    {"ionice", "Flags: -c (class), -n (priority), -p (pid)"},
    {"watch", "Flags: -n (interval), -d (differences), -t (no title)"},
    {"screen", "Flags: -d (detach), -r (reattach), -S (session name)"},
    {"tmux", "Flags: -d (detach), -r (reattach), -S (session name)"},
    {"nohup", "Flags: No flags available"},
    {"disown", "Flags: -h (not remove from job table)"},
    {"git init -q", "Quiet, suppress output"},
    {"git clone -b", "Branch to clone"},
    {"git add -A", "Add all changes"},
    {"git commit -m", "Commit message"},
    {"git status -s", "Short format"},
    {"git push -u", "Set upstream"},
    {"git pull --rebase", "Rebase instead of merge"},
    {"git fetch --all", "Fetch all remotes"},
    {"git merge --no-ff", "Create a merge commit"},
    {"git branch -d", "Delete branch"},
    {"git checkout -b", "Create and switch to new branch"},
    {"git log --oneline", "One line per commit"},
    {"git diff --staged", "Show staged changes"},
    {"git reset --hard", "Reset working directory"},
    {"git rm -r", "Remove directories recursively"},
    {"git mv -f", "Force move or rename"},
    {"git tag -a", "Create annotated tag"},
    {"git stash pop", "Apply and remove stash"},
    {"git rebase -i", "Interactive rebase"},
    {"git remote add", "Add a new remote"},
    {"git show --stat", "Show stats of changes"},
    {"git archive --format", "Specify archive format"},
    {"git bisect start", "Start bisecting"},
    {"git blame -L", "Annotate only the given line range"},
    {"git cherry-pick -n", "Apply changes without committing"},
    {"git grep -n", "Show line numbers"},
    {"git reflog expire", "Expire old reflog entries"},
    {"git submodule update", "Update submodules"},
    {"git gc --aggressive", "Aggressive garbage collection"},
    {"git fsck --full", "Check full object connectivity"},
    {"git clean -f", "Force clean"},
    {"git config --global", "Set global configuration"},
    {"git describe --tags", "Describe with tags"},
    {"git shortlog -s", "Summarize by commit count"},
    {"git rev-parse --abbrev-ref", "Show abbreviated ref"},
    {"git ls-tree -r", "List recursively"},
    {"git update-index --assume-unchanged", "Mark files as unchanged"},
    {"git symbolic-ref HEAD", "Show current branch"},
    {"git worktree add", "Add a new working tree"},
    {"git notes add", "Add a note"},
    {"git rerere clear", "Clear rerere cache"},
    {"git range-diff --creation-factor", "Set creation factor"},
    {"git replace --graft", "Graft a commit"},
    {"git verify-commit --verbose", "Show detailed information"},
    {"git verify-tag --verbose", "Show detailed information"},
    {"git whatchanged -p", "Show patch format"},
    {"git instaweb --httpd", "Specify HTTP daemon"},
    {"git daemon --export-all", "Export all repositories"},
    {"git bundle create", "Create a bundle"},
    {"git filter-branch --tree-filter", "Filter tree"},
    {"git mergetool --tool", "Specify merge tool"},
    {"git citool --no-wait", "Do not wait for user input"},
    {"git gui blame", "Blame in GUI"},
    {"gitk --all", "Show all refs"},
    {"git instaweb --start", "Start web server"},
    {"git archive --prefix", "Add prefix to files"},
    {"git apply --check", "Check if patch can be applied"},
    {"git am --abort", "Abort applying patches"},
    {"git cherry -v", "Verbose output"},
    {"git format-patch -n", "Number of patches"},
    {"git send-email --to", "Specify recipient"},
    {"git request-pull --summary", "Show summary"},
    {"git submodule foreach", "Run command in each submodule"},
    {"git svn clone", "Clone SVN repository"},
    {"git fast-import --date-format", "Specify date format"},
    {"git fast-export --signed-tags", "Export signed tags"},
    {"git daemon --base-path", "Specify base path"},
    {"git instaweb --stop", "Stop web server"},
    {"git instaweb --restart", "Restart web server"},
    {"ping", "-c: Number of packets to send, -i: Interval between packets"},
    {"ifconfig", "-a: Display all interfaces, -s: Display a short list"},
    {"ip", "addr: Show/manipulate IP addresses, link: Show/manipulate network devices"},
    {"netstat", "-a: Show all connections, -r: Show routing table"},
    {"ss", "-t: Show TCP sockets, -u: Show UDP sockets"},
    {"traceroute", "-m: Set max hops, -p: Set destination port"},
    {"mtr", "-r: Generate report, -c: Set number of pings"},
    {"dig", "+short: Short output, +trace: Trace the path to the name server"},
    {"nslookup", "-type: Specify query type, -timeout: Set query timeout"},
    {"host", "-t: Specify query type, -a: Display all information"},
    {"rsync", "-a: Archive mode, -v: Verbose output"},
    {"ftp", "-n: Disable auto-login, -v: Verbose mode"},
    {"sftp", "-P: Specify port, -r: Recursively copy directories"},
    {"telnet", "-8: Use 8-bit data path, -E: Stop any escape character"},
    {"nc", "-l: Listen mode, -u: UDP mode"},
    {"nmap", "-sP: Ping scan, -sT: TCP connect scan"},
    {"tcpdump", "-i: Specify interface, -w: Write to file"},
    {"wireshark", "-i: Specify interface, -k: Start capturing immediately"},
    {"iptables", "-A: Append rule, -D: Delete rule"},
    {"firewalld", "--add-service: Add a service, --remove-service: Remove a service"},
    {"ufw", "enable: Enable firewall, disable: Disable firewall"},
    {"fail2ban", "start: Start service, stop: Stop service"},
    {"nmcli", "con: Manage connections, dev: Manage devices"},
    {"iwconfig", "essid: Set ESSID, mode: Set mode"},
    {"iwlist", "scan: Scan for networks, freq: Show available frequencies"},
    {"ethtool", "-s: Change settings, -i: Show driver information"},
    {"route", "add: Add route, del: Delete route"},
    {"arp", "-a: Display ARP table, -d: Delete entry"},
    {"hostname", "-i: Display IP address, -d: Display domain name"},
    {"curl", "-O: Save to file, -I: Fetch headers only"},
    {"wget", "-q: Quiet mode, -r: Recursive download"},
    {"scp", "-r: Recursively copy directories, -P: Specify port"},
    {"ssh", "-p: Specify port, -i: Specify identity file"},
    {"whois", "-h: Specify host, -p: Specify port"},
    {"ipcalc", "-n: Show network address, -b: Show broadcast address"},
    {"netcat", "-l: Listen mode, -u: UDP mode"},
    {"route", "add: Add route, del: Delete route"},
    {"arping", "-c: Count of ARP requests, -I: Specify interface"},
    {"iw", "dev: Show device info, link: Show link info"},
    {"bridge", "fdb: Manage forwarding database, vlan: Manage VLANs"},
    {"tc", "qdisc: Manage queueing disciplines, filter: Manage filters"},
    {"ipset", "create: Create a set, add: Add an entry to a set"},
    {"ip rule", "add: Add a new rule, del: Delete a rule"},
    {"ip addr", "add: Add an address, del: Delete an address"},
    {"ip link", "set: Change device attributes, show: Display device attributes"},
    {"ip route", "add: Add a new route, del: Delete a route"},
    {"ip neigh", "add: Add a neighbor entry, del: Delete a neighbor entry"},
    {"ip maddr", "add: Add a multicast address, del: Delete a multicast address"},
    {"ip monitor", "all: Monitor all events, link: Monitor link events"},
    {"ip tunnel", "add: Add a new tunnel, del: Delete a tunnel"},
    {"ip xfrm", "state: Manage state, policy: Manage policy"},
    {"ip netns", "add: Add a new namespace, del: Delete a namespace"},
    {"ip vrf", "add: Add a new VRF, del: Delete a VRF"},
    {"ip link set", "up: Enable a device, down: Disable a device"},
    {"ip link add", "type: Specify device type, name: Specify device name"},
    {"ip link delete", "dev: Specify device to delete"},
    {"ip link show", "dev: Specify device to show"},
    {"ip link set dev", "mtu: Change device MTU, address: Change device MAC address"},
    {"ip link set up", "Enable a device"},
    {"ip link set down", "Disable a device"},
    {"ip link set mtu", "Change device MTU"},
    {"ip link set address", "Change device MAC address"},
    {"ip link set master", "Set master device"},
    {"ip link set nomaster", "Unset master device"},
    {"ip link set type", "Change device type"},
    {"ip link set netns", "Move device to network namespace"},
    {"ip link set alias", "Set device alias"},
    {"ip link set group", "Set device group"},
    {"ip link set txqueuelen", "Change device transmit queue length"},
    {"ip link set vf", "Change virtual function attributes"},
    {"ip link set xdp", "Attach/detach XDP program"},
}